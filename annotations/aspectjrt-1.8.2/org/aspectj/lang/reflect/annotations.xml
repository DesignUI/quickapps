<root>
    <item name='org.aspectj.lang.reflect.AdviceKind AFTER_RETURNING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AdviceKind AFTER_THROWING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Method getMethod(java.lang.String, org.aspectj.lang.reflect.AjType&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.Pointcut getDeclaredPointcut(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.PointcutBasedPerClause org.aspectj.lang.reflect.PointcutExpression getPointcutExpression()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.Advice[] getDeclaredAdvice(org.aspectj.lang.reflect.AdviceKind...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.DeclareAnnotation.Kind Method'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.Pointcut getPointcut(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.InterTypeMethodDeclaration org.aspectj.lang.reflect.AjType&lt;?&gt;[] getParameterTypes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Constructor getConstructor(org.aspectj.lang.reflect.AjType&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.PerClauseKind PERTYPEWITHIN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.Advice[] getDeclaredAdvice(org.aspectj.lang.reflect.AdviceKind...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.DeclareAnnotation.Kind Field'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.DeclareParents[] getDeclareParents()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.PerClauseKind PERTHIS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.InterTypeMethodDeclaration getDeclaredITDMethod(java.lang.String, org.aspectj.lang.reflect.AjType&lt;?&gt;, org.aspectj.lang.reflect.AjType&lt;?&gt;...) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.InterTypeMethodDeclaration org.aspectj.lang.reflect.AjType&lt;?&gt; getReturnType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.DeclareErrorOrWarning[] getDeclareErrorOrWarnings()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.InterTypeMethodDeclaration java.lang.reflect.Type[] getGenericParameterTypes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.InterTypeConstructorDeclaration org.aspectj.lang.reflect.AjType&lt;?&gt;[] getExceptionTypes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Field[] getDeclaredFields()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.PerClauseKind PERCFLOW'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Field getDeclaredField(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.PerClauseKind PERTARGET'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.Advice org.aspectj.lang.reflect.AjType getDeclaringType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.InterTypeConstructorDeclaration org.aspectj.lang.reflect.AjType&lt;?&gt;[] getParameterTypes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.Advice[] getAdvice(org.aspectj.lang.reflect.AdviceKind...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.Pointcut org.aspectj.lang.reflect.AjType&lt;?&gt;[] getParameterTypes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AdviceKind AFTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.DeclareAnnotation.Kind Type'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.AjType&lt;?&gt;[] getAjTypes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.DeclareAnnotation.Kind Constructor'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AdviceKind AROUND'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Constructor getDeclaredConstructor(org.aspectj.lang.reflect.AjType&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.Advice getDeclaredAdvice(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.Advice getAdvice(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.InterTypeConstructorDeclaration getITDConstructor(org.aspectj.lang.reflect.AjType&lt;?&gt;, org.aspectj.lang.reflect.AjType&lt;?&gt;...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.AjType&lt;?&gt;[] getDeclaredAjTypes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.InterTypeFieldDeclaration getDeclaredITDField(java.lang.String, org.aspectj.lang.reflect.AjType&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.AjType&lt;?&gt;[] getInterfaces()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.Advice[] getAdvice(org.aspectj.lang.reflect.AdviceKind...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.DeclarePrecedence[] getDeclarePrecedence()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.InterTypeFieldDeclaration getITDField(java.lang.String, org.aspectj.lang.reflect.AjType&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Method getMethod(java.lang.String, org.aspectj.lang.reflect.AjType&lt;?&gt;...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.InterTypeConstructorDeclaration getDeclaredITDConstructor(org.aspectj.lang.reflect.AjType&lt;?&gt;, org.aspectj.lang.reflect.AjType&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Method getDeclaredMethod(java.lang.String, org.aspectj.lang.reflect.AjType&lt;?&gt;...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Method getDeclaredMethod(java.lang.String, org.aspectj.lang.reflect.AjType&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.Advice getAdvice(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.InterTypeConstructorDeclaration getDeclaredITDConstructor(org.aspectj.lang.reflect.AjType&lt;?&gt;, org.aspectj.lang.reflect.AjType&lt;?&gt;...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.PerClauseKind SINGLETON'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Field[] getFields()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Method[] getMethods()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.DeclareAnnotation[] getDeclareAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.InterTypeMethodDeclaration getITDMethod(java.lang.String, org.aspectj.lang.reflect.AjType&lt;?&gt;, org.aspectj.lang.reflect.AjType&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjTypeSystem org.aspectj.lang.reflect.AjType&lt;T&gt; getAjType(java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.Pointcut org.aspectj.lang.reflect.PointcutExpression getPointcutExpression()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.InterTypeMethodDeclaration getDeclaredITDMethod(java.lang.String, org.aspectj.lang.reflect.AjType&lt;?&gt;, org.aspectj.lang.reflect.AjType&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Field getField(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.Advice getDeclaredAdvice(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.PerClauseKind PERCFLOWBELOW'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.InterTypeMethodDeclaration getITDMethod(java.lang.String, org.aspectj.lang.reflect.AjType&lt;?&gt;, org.aspectj.lang.reflect.AjType&lt;?&gt;...) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.DeclareSoft[] getDeclareSofts()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType java.lang.reflect.Method[] getDeclaredMethods()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AjType org.aspectj.lang.reflect.InterTypeConstructorDeclaration getITDConstructor(org.aspectj.lang.reflect.AjType&lt;?&gt;, org.aspectj.lang.reflect.AjType&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.AdviceKind BEFORE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.aspectj.lang.reflect.InterTypeMethodDeclaration org.aspectj.lang.reflect.AjType&lt;?&gt;[] getExceptionTypes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.aspectj.lang.reflect.InterTypeConstructorDeclaration java.lang.reflect.Type[] getGenericParameterTypes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
</root>
